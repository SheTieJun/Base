apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'android-aspectjx'//面向切面

aspectjx {
    exclude 'androidx.*'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    resourcePrefix 'base_'
    defaultConfig {
        minSdkVersion rootProject.ext.minVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        release {
//            对齐
            zipAlignEnabled true
//            minifyEnabled true           //混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    kotlinOptions {
        // Cannot inline bytecode built with JVM target 1.8 into bytecode
        // that is being built with JVM target 1.6.
        // Please specify proper '-jvm-target' option
        jvmTarget = "1.8"
    }

    libraryVariants.all {
        variant ->
            variant.outputs.all {
                output -> output.outputFileName = "shetj-${variant.name}-${defaultConfig.versionName}.aar"
            }
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.google.code.gson') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "$gosnVersion"
                }
            }
            if (requested.group == 'com.google.code.findbugs') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '3.0.0'
                }
            }
            if (requested.group == 'com.github.bumptech.glide') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "$glideVersion"
                }
            }
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation 'junit:junit:4.12'
    //https://developer.android.google.cn/jetpack/
    //https://maven.google.com/web/index.html
    api "androidx.appcompat:appcompat:$appcompat"
//    implementation "androidx.legacy:legacy-support-v4:$androidx"
    //https://material.io/develop/android/
    api "com.google.android.material:material:$appcompat"
    api "androidx.recyclerview:recyclerview:$appcompat"
    api "androidx.cardview:cardview:$androidx"
    api "androidx.core:core-ktx:$androidx_2"
    api "androidx.activity:activity-ktx:$appcompat"
    api "androidx.constraintlayout:constraintlayout:$constraintlayout"
    api 'androidx.browser:browser:1.2.0'
    api "androidx.security:security-crypto:1.1.0-alpha02" //加密的sp
    api 'androidx.core:core-animation:1.0.0-alpha02'
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    api 'androidx.multidex:multidex:2.0.1'

    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    //腾讯Android开发框架 https://qmuiteam.com/android/get-started/
    api 'com.qmuiteam:qmui:2.0.0-alpha10'

    api "org.greenrobot:eventbus:$eventBus"
    api "com.google.code.gson:gson:$gosnVersion"
    //图片加载
    api "com.github.bumptech.glide:glide:$glideVersion"
    api 'jp.wasabeef:glide-transformations:4.1.0'

    api 'io.reactivex.rxjava3:rxjava:3.0.4'
    api 'io.reactivex.rxjava3:rxandroid:3.0.0'
    api 'com.jakewharton.rxbinding4:rxbinding:4.0.0'
    api 'com.jakewharton.rxbinding4:rxbinding-core:4.0.0'
    api 'io.reactivex.rxjava3:rxkotlin:3.0.0' //https://github.com/ReactiveX/RxKotlin
    //框架
    api 'com.jakewharton.timber:timber:4.7.1'

    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-rx3:$coroutines"

    // Koin AndroidX Scope features
    api "org.koin:koin-androidx-scope:$koin_version"
    // Koin AndroidX ViewModel features
    api "org.koin:koin-androidx-viewmodel:$koin_version"
    // Koin AndroidX Fragment features
    api "org.koin:koin-androidx-fragment:$koin_version"
    // Koin AndroidX Experimental features
    api "org.koin:koin-androidx-ext:$koin_version"

    //https://github.com/code-mc/material-icon-lib icon图片库
    api 'net.steamcrafted:materialiconlib:1.1.5'

    api 'com.squareup.okhttp3:okhttp:4.7.2'
    api 'com.jakewharton:disklrucache:2.0.2'
    api "com.squareup.retrofit2:retrofit:$retrofit2"
    //https://github.com/square/retrofit/tree/master/retrofit-converters
    api "com.squareup.retrofit2:converter-gson:$retrofit2"
    //https://github.com/square/retrofit/tree/master/retrofit-adapters
    api "com.squareup.retrofit2:adapter-rxjava3:$retrofit2"
    //Android Jetpack


    api "androidx.room:room-common:$room_version"
    api "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    api "androidx.room:room-rxjava3:$room_version"

    api "androidx.paging:paging-runtime:$paging_version"
}

apply from: 'bintrayConfig.gradle'
apply from: 'bintray.gradle'
