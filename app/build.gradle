apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "shetj.me.base"
        minSdkVersion 21
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64', 'x86'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    buildFeatures {
        //Unresolved reference: BR
        dataBinding = true
    }

    kotlinOptions {
        // Cannot inline bytecode built with JVM target 1.8 into bytecode
        // that is being built with JVM target 1.6.
        // Please specify proper '-jvm-target' option
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            debuggable false
            minifyEnabled false
            zipAlignEnabled true
            // dex突破65535的限制
            multiDexEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "false"
            debuggable true
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            // dex突破65535的限制
            multiDexEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
            ndk {
                abiFilters "x86"
            }
        }
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.google.code.gson') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "$gsonVersion"
                }
            }
            if (requested.group == 'com.google.code.findbugs') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '3.0.0'
                }
            }
            if (requested.group == 'com.tencent.mm.opensdk') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '5.5.8'
                }
            }
            if (requested.group == 'com.github.bumptech.glide') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "$glideVersion"
                }
            }

            if (requested.group == '"androidx.room') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "$room_version"
                }
            }
        }
    }
}

// 优化编译速度 如果有用到kapt添加如下配置
kapt {
    useBuildCache = true
    javacOptions {
        option("-Xmaxerrs", 500)
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.legacy:legacy-support-v4:$androidx"
    kapt project(path: ':compilers')
    //https://material.io/develop/android/
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    def fragment_version = "1.1.0"
//    implementation "androidx.fragment:fragment:$fragment_version"
//    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    testImplementation 'junit:junit:4.13'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation project(':base')
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-alpha-2'
//    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
//    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'

    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.5.8'

    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
    implementation 'com.airbnb.android:lottie:3.4.1'

    implementation 'com.github.razerdp:BasePopup:2.2.1'
    implementation 'com.afollestad.material-dialogs:core:3.1.0'

    //图片预览 https://github.com/iielse/ImageWatcher
    implementation 'com.github.iielse:ImageWatcher:1.1.5'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    def work_version = "2.4.0"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    //文件下载
    // core
    implementation "com.liulishuo.okdownload:okdownload:1.0.7"
// provide sqlite to store breakpoints
    implementation "com.liulishuo.okdownload:sqlite:1.0.7"
// provide okhttp to connect to backend
    implementation "com.liulishuo.okdownload:okhttp:1.0.7"

    implementation("com.google.guava:guava:29.0-android")
}

//apply from: file("dokit-config.gradle")